{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {

    "deploymentPrefix": {
      "type": "string",
      "minLength": 4,
      "metadata": {
        "description": "A unique string for the deployment which would be used to provision the resources"
      }
    },
    "faceApiLocation": {
      "type": "string",
      "defaultValue": "eastus",
      "allowedValues": [
        "eastus",
        "eastus2",
        "westus",
        "westus2",
        "southcentralus",
        "westcentralus",
        "northeurope",
        "westeurope"
      ]
    },
    "B2C Application Id": {
      "type": "string",
      "metadata": {
        "description": "Enter App Client ID registrered under B2C tenant"
      }
    },
    "B2C Policy": {
      "type": "string",
      "metadata": {
        "description": "Enter B2C SignUp-SignIn policy"
      }
    },
    "B2C Tenant": {
      "type": "string",
      "metadata": {
        "description": "Enter B2C tenant name ex. something.onmicrosoft.com"
      }
    },
    "B2C Scope": {
      "type": "string",
      "metadata": {
        "description": "Enter User impersonation scope of B2C tenant"
      }
    },
    "videoIndexerKey": {
      "type": "string",
      "metadata": {
        "description": "Enter Video Indexer service key"
      }
    }
  },
  "variables": {
    //Storage Account Variables Start

    "strAccntName": "[concat(toLower(parameters('deploymentPrefix')),'strgaccnt')]",
    "strAccntType": "Standard_LRS",

    //Storage Account Variables End


    //IoT Hub Variables Start

    "iotHubName": "[concat(parameters('deploymentPrefix'),'iothub')]",
    "iotHubPricingTier": "S1",
    "iothubCapacityUnits": 1,
    "iotHubKeyName": "iothubowner",
    "iotHubHostName": "[concat(variables('iotHubName'),'.azure-devices.net')]",

    //IoT Hub Variables End

    //Face API Variables Start

    "faceApiName": "[concat(parameters('deploymentPrefix'),'faceapi')]",
    "faceApiPricingTier": "S0",

    //Face API Variables End

    //Storage Variables Start

    "DeployStorageAccountName": "<Placeholder for deployment storage account name>",
    "DeployStorageAccountKey": "",
    "WebAppDeployPackageURI": "<Placeholder for Web App deployment package blob URL>",
    "ComputeEngineDeployPackageURI": "<Placeholder for Compute Engine deployment package blob URL>",
    "ServerBackendDeployPackageURI": "<Placeholder for REST API App deployment package blob URL>",
    "SasToken": "?",

    //Storage Variables End

    //Database Variables Start

    //Document DB Variables Start

    "DocDBAccountName": "[concat(toLower(parameters('deploymentPrefix')),'docdb')]",
    "offerType": "Standard",
    "DocDBOfferThroughput": "400",

    //Document DB Variables End

    //Web App Variables Start
    "appServicePlanPricingTier": "B1",
    "appServicePlanInstanceCount": 1,
    "hostingPlanName": "[concat(parameters('deploymentPrefix'),'AppServPlan')]",
    "webSiteName": "[concat(parameters('deploymentPrefix'),'webapp')]",
    "computeEngineName": "[concat(parameters('deploymentPrefix'),'cmptengine')]",
    "serverBackendName": "[concat(parameters('deploymentPrefix'),'restapp')]",

    "WebAppPackageURI": "[concat(variables('WebAppDeployPackageURI'), variables('SasToken'))]",
    "ComputeEnginePackageURI": "[concat(variables('ComputeEngineDeployPackageURI'), variables('SasToken'))]",
    "ServerBackendPackageURI": "[concat(variables('ServerBackendDeployPackageURI'), variables('SasToken'))]",
    "BlobconnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('DeployStorageAccountName'),';AccountKey=',variables('DeployStorageAccountKey'))]",
    "websiteFullAddress": "[concat('https://',variables('webSiteName'),'.azurewebsites.net')]",
    "serverBackendFullAddress": "[concat('https://',variables('serverBackendName'),'.azurewebsites.net')]",
    "computeEngineFullAddress": "[concat('https://',variables('computeEngineName'),'.azurewebsites.net')]",
    "ADEndpoint": "https://login.windows.net/",
    "WindowsManagementUri": "https://management.core.windows.net/"

    //Web App Variables End
  },
  "resources": [

    //Storage Account Resources Start

    {
      "name": "[variables('strAccntName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "[variables('strAccntType')]"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "StorageAccount"
      },
      "kind": "Storage"
    },

    //Storage Account Resources End

    //IoT Hub Resources Start

    {
      "apiVersion": "2016-02-03",
      "location": "[resourceGroup().location]",
      "name": "[variables('iotHubName')]",
      "properties": {
        "eventHubEndpoints": {
          "events": {
            "retentionTimeInDays": 1,
            "partitionCount": 2
          }
        },
        "cloudToDevice": {
          "defaultTtlAsIso8601": "PT1H",
          "maxDeliveryCount": 10,
          "feedback": {
            "maxDeliveryCount": 10,
            "ttlAsIso8601": "PT1H",
            "lockDurationAsIso8601": "PT60S"
          }
        },
        "location": "[resourceGroup().location]"
      },
      "sku": {
        "name": "[variables('iotHubPricingTier')]",
        "capacity": "[variables('iothubCapacityUnits')]"
      },
      "type": "Microsoft.Devices/IotHubs"
    },

    //IoT Hub Resources End

    //Face API Resources Start

    {
      "apiVersion": "2016-02-01-preview",
      "name": "[variables('faceApiName')]",
      "location": "[parameters('faceApiLocation')]",
      "type": "Microsoft.CognitiveServices/accounts",
      "kind": "Face",
      "sku": {
        "name": "[variables('faceApiPricingTier')]"
      },
      "properties": {}
    },

    //Face API Resources End

    //Database Resources Start

    //Document DB Start

    {
      "apiVersion": "2015-04-08",
      "kind": "MongoDB",
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "name": "[variables('DocDBAccountName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('DocDBAccountName')]",
        "databaseAccountOfferType": "[variables('offerType')]",
        "locations": [
          {
            "locationName": "[resourceGroup().location]",
            "failoverPriority": 0,
            "id": "[concat(variables('DocDBAccountName'), '-', resourceGroup().location)]"
          }
        ]
      },
      "tags": {
        "defaultExperience": "MongoDB"
      }
    },

    //Document DB End

    //Web App Resources Start

    {
      "apiVersion": "2016-03-01",
      "name": "[variables('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "HostingPlan"
      },
      "sku": {
        "name": "[variables('appServicePlanPricingTier')]",
        "capacity": "[variables('appServicePlanInstanceCount')]"
      },
      "properties": {
        "name": "[variables('hostingPlanName')]"
      }
    },
    {
      "apiVersion": "2016-03-01",
      "name": "[variables('webSiteName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('hostingPlanName')]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName')))]": "empty",
        "displayName": "Website"
      },
      "properties": {
        "name": "[variables('webSiteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "config",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('webSiteName'))]",
            "[concat('Microsoft.Web/sites/', variables('webSiteName'), '/extensions/MSDeploy')]"
          ],
          "tags": {
            "displayName": "WebAppConfig"
          },
          "properties": {
            "phpVersion": "5.6",
            "netFrameworkVersion": "v4.6",
            "use32BitWorkerProcess": false,
            "webSocketsEnabled": true,
            "alwaysOn": true,
            "remoteDebuggingEnabled": true,
            "remoteDebuggingVersion": "VS2015"
          }
        },
        {
          "name": "MSDeploy",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('webSiteName'))]"
          ],
          "tags": {
            "displayName": "WebAppMSDeploy"
          },
          "properties": {
            "packageUri": "[variables('WebAppPackageURI')]"
          }
        },
        {
          "name": "connectionstrings",
          "type": "config",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('webSiteName'))]",
            "[concat('Microsoft.Web/sites/', variables('webSiteName'), '/extensions/MSDeploy')]"
          ],
          "tags": {
            "displayName": "WebAppConnectionStrings"
          },
          "properties": {
            "BlobConnection": {
              "value": "[variables('BlobconnectionString')]",
              "type": "Custom"
            },
            "backendHost": {
              "value": "[variables('serverBackendFullAddress')]",
              "type": "Custom"
            },
            "b2cTenantID": {
              "value": "[parameters('B2C Tenant')]",
              "type": "Custom"
            },
            "b2cClientID": {
              "value": "[parameters('B2C Application Id')]",
              "type": "Custom"
            },
            "b2cPolicyName": {
              "value": "[parameters('B2C Policy')]",
              "type": "Custom"
            },
            "b2cScopes": {
              "value": "[parameters('B2C Scope')]",
              "type": "Custom"
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2016-03-01",
      "name": "[variables('computeEngineName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('hostingPlanName')]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName')))]": "empty",
        "displayName": "ComputeEngine"
      },
      "properties": {
        "name": "[variables('computeEngineName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "config",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('computeEngineName'))]",
            "[concat('Microsoft.Web/sites/', variables('computeEngineName'), '/extensions/MSDeploy')]"
          ],
          "tags": {
            "displayName": "ComputeEngineConfig"
          },
          "properties": {
            "phpVersion": "5.6",
            "netFrameworkVersion": "v4.6",
            "use32BitWorkerProcess": false,
            "webSocketsEnabled": true,
            "alwaysOn": true,
            "remoteDebuggingEnabled": true,
            "remoteDebuggingVersion": "VS2015"
          }
        },
        {
          "name": "MSDeploy",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('computeEngineName'))]"
          ],
          "tags": {
            "displayName": "ComputeEngineMSDeploy"
          },
          "properties": {
            "packageUri": "[variables('ComputeEnginePackageURI')]"
          }
        },
        {
          "name": "connectionstrings",
          "type": "config",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('computeEngineName'))]",
            "[concat('Microsoft.Web/sites/', variables('computeEngineName'), '/extensions/MSDeploy')]"
          ],
          "tags": {
            "displayName": "ComputeEngineConnectionStrings"
          },
          "properties": {
            "backendHost": {
              "value": "[variables('serverBackendFullAddress')]",
              "type": "Custom"
            },
            "cloudServiceUrl": {
              "value": "[concat(variables('computeEngineFullAddress'),'/')]",
              "type": "Custom"
            },
            "faceApiSubscriptionKey": {
              "value": "[listKeys(variables('faceApiName'),'2016-02-01-preview').key1]",
              "type": "Custom"
            },
            "faceApiBaseUrl": {
              "value": "[concat(reference(variables('faceApiName'),'2016-02-01-preview').endpoint, '/')]",
              "type": "Custom"
            },
            "blobUri": {
              "value": "[concat('https://', variables('strAccntName'), '.blob.core.windows.net/')]",
              "type": "Custom"
            },
            "blobStorageAccessKey": {
              "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('strAccntName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]",
              "type": "Custom"
            },
            "blobStorageAccountName": {
              "value": "[variables('strAccntName')]",
              "type": "Custom"
            },
            "serialKey": {
              "value": "[uniqueString(resourceGroup().id)]",
              "type": "Custom"
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2016-03-01",
      "name": "[variables('serverBackendName')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('DocDBAccountName')]",
        "[variables('hostingPlanName')]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName')))]": "empty",
        "displayName": "ServerBackend"
      },
      "properties": {
        "name": "[variables('serverBackendName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "config",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('serverBackendName'))]",
            "[concat('Microsoft.Web/sites/', variables('serverBackendName'), '/extensions/MSDeploy')]"
          ],
          "tags": {
            "displayName": "ServerBackendConfig"
          },
          "properties": {
            "phpVersion": "5.6",
            "netFrameworkVersion": "v4.6",
            "use32BitWorkerProcess": false,
            "webSocketsEnabled": true,
            "alwaysOn": true,
            "remoteDebuggingEnabled": true,
            "remoteDebuggingVersion": "VS2015",
            "cors": {
              "allowedOrigins": [
                "[concat('https://', toLower(variables('webSiteName')), '.azurewebsites.net')]"
              ]
            }
          }
        },
        {
          "name": "MSDeploy",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('serverBackendName'))]",
            "[concat('Microsoft.Devices/iothubs/', variables('iotHubName'))]"
          ],
          "tags": {
            "displayName": "ServerBackendMSDeploy"
          },
          "properties": {
            "packageUri": "[variables('ServerBackendPackageURI')]"
          }
        },
        {
          "name": "connectionstrings",
          "type": "config",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('serverBackendName'))]",
            "[concat('Microsoft.Web/sites/', variables('serverBackendName'), '/extensions/MSDeploy')]"
          ],
          "tags": {
            "displayName": "ServerBackendConnectionStrings"
          },
          "properties": {

            "backendHost": {
              "value": "[variables('serverBackendFullAddress')]",
              "type": "Custom"
            },
            "mongooseUrl": {
              "value": "[concat('mongodb://', variables('DocDBAccountName'), ':', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('DocDBAccountName')), '2015-04-08').primaryMasterKey, '@', variables('DocDBAccountName'), '.documents.azure.com:10255/?ssl=true&replicaSet=globaldb')]",
              "type": "Custom"
            },
            "b2cClientID": {
              "value": "[parameters('B2C Application Id')]",
              "type": "Custom"
            },
            "b2cPolicyName": {
              "value": "[parameters('B2C Policy')]",
              "type": "Custom"
            },
            "b2cTenantID": {
              "value": "[parameters('B2C Tenant')]",
              "type": "Custom"
            },
            "iothubConnectionString": {
              "value": "[concat('HostName=',variables('iotHubName'),'.azure-devices.net;SharedAccessKeyName=',variables('iotHubKeyName'),';SharedAccessKey=',listKeys(resourceId('Microsoft.Devices/IotHubs/Iothubkeys', variables('iotHubName'), variables('iotHubKeyName')), '2016-02-03').primaryKey)]",
              "type": "Custom"
            },
            "faceApiSubscriptionKey": {
              "value": "[listKeys(variables('faceApiName'),'2016-02-01-preview').key1]",
              "type": "Custom"
            },
            "faceApiBaseUrl": {
              "value": "[concat(reference(variables('faceApiName'),'2016-02-01-preview').endpoint,'/face/v1.0/')]",
              "type": "Custom"
            },
            "videoIndexSubscriptionKey": {
              "value": "[parameters('videoIndexerKey')]",
              "type": "Custom"
            },
            "videoBlobUri": {
              "value": "[concat('https://', variables('strAccntName'), '.blob.core.windows.net')]",
              "type": "Custom"
            },
            "videoBlobStorageAccessKey": {
              "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('strAccntName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]",
              "type": "Custom"
            },
            "videoBlobStorageAccountName": {
              "value": "[variables('strAccntName')]",
              "type": "Custom"
            },
            "blobUri": {
              "value": "[concat('https://', variables('strAccntName'), '.blob.core.windows.net/')]",
              "type": "Custom"
            },
            "blobStorageAccessKey": {
              "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('strAccntName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]",
              "type": "Custom"
            },
            "blobStorageAccountName": {
              "value": "[variables('strAccntName')]",
              "type": "Custom"
            }
          }
        }
      ]
    }

    //Web App Resources End

  ],
  "outputs": {
    //Web App Output Start

    "WebSiteUri": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Web/sites/', variables('webSiteName'))).hostnames[0]]"
    },
    "ServerBackendUri": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Web/sites/', variables('serverBackendName'))).hostnames[0]]"
    },
    "ComputeEngineUri": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Web/sites/', variables('computeEngineName'))).hostnames[0]]"
    },

    //Web App Output End

    //IoT hub Output Start

    "IoTHubConnectionString": {
      "type": "string",
      "value": "[concat('HostName=',variables('iotHubName'),'.azure-devices.net;SharedAccessKeyName=',variables('iotHubKeyName'),';SharedAccessKey=',listKeys(resourceId('Microsoft.Devices/IotHubs/Iothubkeys', variables('iotHubName'), variables('iotHubKeyName')), '2016-02-03').primaryKey)]"
    },

    //IoT hub Output End

    //Storage Account Output Start

    "AccountName": {
      "type": "string",
      "value": "[variables('strAccntName')]"
    },
    "AccountKey": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('strAccntName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
    },

    //Storage Account Outout End

    //Video Indexer Output Start

    "VideoIndexerKey": {
      "type": "string",
      "value": "[parameters('videoIndexerKey')]"
    }

    //Video Indexer Output End
  }
}
